version: 2.1
jobs:
  # Client-Test:
  #   docker:
  #     - image: circleci/node:latest
  #   steps:
  #     - checkout
  #     - run: curl -o- -L https://yarnpkg.com/install.sh | bash
  #     - restore_cache:
  #        name: Restore Yarn Package Cache
  #        keys:
  #         - client-yarn-packages-{{ checksum "client/yarn.lock" }}
  #     - run:
  #        name: Install Dependencies
  #        command: cd client && yarn install --frozen-lockfile
  #     - save_cache:
  #        name: Save Yarn Package Cache
  #        key: client-yarn-packages-{{ checksum "client/yarn.lock" }}
  #        paths:
  #            - ~/.cache/yarn
  #     - run: cd client && yarn test
  # Server-Test:
  #   docker:
  #     - image: circleci/node:latest
  #   steps:
  #     - checkout
  #     - run: curl -o- -L https://yarnpkg.com/install.sh | bash
  #     - restore_cache:
  #         name: Restore Yarn Package Cache
  #         keys:
  #          - server-yarn-packages-{{ checksum "server/yarn.lock" }}
  #     - run:
  #         name: Install Dependencies
  #         command: cd server && yarn install --frozen-lockfile
  #     - save_cache:
  #         name: Save Yarn Package Cache
  #         key: server-yarn-packages-{{ checksum "server/yarn.lock" }}
  #         paths:
  #             - ~/.cache/yarn
  #     - run: cd server && yarn add --dev jest && yarn jest
  # Validation:
  #   docker:
  #     - image: circleci/node:latest
  #   steps:
  #     - run:
  #         name: Validation
  #         command: echo "it's work julixxxxxxxx"
  Deploy:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - client-yarn-packages-{{ checksum "client/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: cd client && yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: client-yarn-packages-{{ checksum "client/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: cd client && yarn test
      - run:
          name: Deploy master to netifly
          command: cd client && yarn build
      - run:
          name: install netlify
          command: sudo npm install netlify-cli -g
      - run:
          name: deploy netlify
          command: netlify deploy --auth $NETLIFY_AUTH_TOKEN --site $NETLIFY_SITE_ID	 --dir=./client/build


workflows:
  version: 2
  build_and_test:
    jobs:
      - Deploy
      # - Client-Test
      # - Server-Test
      # - Validation:
      #     type: approval
      #     requires:
      #        - Client-Test
      #        - Server-Test
      # - Deploy:
      #     requires:
      #         - Valid
